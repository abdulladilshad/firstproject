<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>My Wallet</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Marcellus&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/styles/user-dashboard.css">
    <style>
        body {
            padding-top: 80px;
        }
        
        
        .navbar {
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.08);
            transition: all 0.3s ease;
            height: 80px;
        }

        .navbar-brand {
            font-family: 'Marcellus', serif;
            font-size: 1.8rem;
            color: #1a1a1a;
            position: relative;
        }

        .brand-dot {
            position: absolute;
            right: -12px;
            bottom: 8px;
            width: 8px;
            height: 8px;
            background: #1a1a1a;
            border-radius: 50%;
        }

        .navbar-nav .nav-link {
            font-size: 0.9rem;
            font-weight: 500;
            padding: 0.5rem 1.2rem !important;
            position: relative;
        }

        .navbar-nav .nav-link::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 50%;
            width: 0;
            height: 2px;
            background: #1a1a1a;
            transition: all 0.3s ease;
            transform: translateX(-50%);
        }

        .navbar-nav .nav-link:hover::after,
        .navbar-nav .nav-link.active::after {
            width: 80%;
        }

        .nav-icons {
            display: flex;
            align-items: center;
            gap: 1.5rem;
        }

        .nav-icon {
            color: #1a1a1a;
            font-size: 1.2rem;
            transition: all 0.3s ease;
            position: relative;
        }

        .nav-icon:hover {
            color: #666;
            transform: translateY(-2px);
        }

        
        .container {
            display: flex;
            gap: 2rem;
            padding: 2rem;
            max-width: 1200px;
            margin: 0 auto;
        }

        .sidebar {
            flex: 0 0 200px;
            display: flex;
            flex-direction: column;
            gap: 1rem;
        }

        .sidebar-btn {
            display: flex;
            align-items: center;
            gap: 1rem;
            padding: 1rem;
            background: white;
            border-radius: 8px;
            text-decoration: none;
            color: #333;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            transition: all 0.3s ease;
        }

        .sidebar-btn:hover {
            background: #f0f0f0;
            transform: translateX(5px);
        }

        .sidebar-btn.active {
            background: #4CAF50;
            color: white;
        }

        .sidebar-btn i {
            width: 20px;
            text-align: center;
        }

        .main-content {
            flex: 1;
        }

        
        .wallet-card {
            background-color: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            margin-bottom: 20px;
            text-align: center;
        }

        .balance {
            font-size: 32px;
            font-weight: bold;
            color: #2c3e50;
            margin: 10px 0;
        }

        .balance-label {
            color: #7f8c8d;
            font-size: 14px;
            margin-bottom: 5px;
        }

        form {
            background-color: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            margin-bottom: 20px;
        }

        input[type="number"] {
            width: 100%;
            padding: 10px;
            margin-bottom: 15px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }

        button {
            background-color: #3498db;
            color: white;
            border: none;
            padding: 10px 15px;
            border-radius: 4px;
            cursor: pointer;
            width: 100%;
            font-size: 16px;
            margin-bottom: 10px;
        }

        button:hover {
            background-color: #2980b9;
        }

        .transaction-btn {
            background-color: #2ecc71;
        }

        .transaction-btn:hover {
            background-color: #27ae60;
        }

        
        .modal {
            display: none;
            position: fixed;
            z-index: 1;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgba(0,0,0,0.4);
        }

        .modal-content {
            background-color: #fefefe;
            margin: 10% auto;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
            width: 80%;
            max-width: 600px;
            max-height: 80vh;
            overflow-y: auto;
        }

        .close {
            color: #aaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
            cursor: pointer;
        }

        .close:hover {
            color: black;
        }

        .modal-header {
            padding-bottom: 10px;
            border-bottom: 1px solid #eee;
            margin-bottom: 15px;
        }

        .transaction-list {
            list-style: none;
            padding: 0;
        }

        .transaction-item {
            padding: 15px;
            border-bottom: 1px solid #eee;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .transaction-type {
            font-weight: bold;
        }

        .transaction-amount {
            font-weight: bold;
        }

        .deposit {
            color: #2ecc71;
        }

        .withdrawal {
            color: #e74c3c;
        }

        .transaction-date {
            color: #7f8c8d;
            font-size: 12px;
        }

        .no-transactions {
            text-align: center;
            color: #7f8c8d;
            padding: 20px;
        }
    </style>
</head>
<body>
    
    <nav class="navbar navbar-expand-lg navbar-light bg-white fixed-top">
        <div class="container">
            <a class="navbar-brand" href="/">
                LUXE TIME
                <span class="brand-dot"></span>
            </a>

            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
                <span class="navbar-toggler-icon"></span>
            </button>

            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav mx-auto">
                    <li class="nav-item">
                        <a class="nav-link" href="/">Home</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/shope">Shop</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/men">Men</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/women">Women</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/limited-edition">Limited Edition</a>
                    </li>
                </ul>

                <div class="nav-icons">
                    <a href="/search" class="nav-icon">
                        <i class="fas fa-search"></i>
                    </a>
                    <a href="/wishlist" class="nav-icon">
                        <i class="fas fa-heart"></i>
                    </a>
                    <a href="/cart" class="nav-icon">
                        <i class="fas fa-shopping-cart"></i>
                    </a>
                    <a href="/profile" class="nav-icon">
                        <i class="fas fa-user"></i>
                    </a>
                </div>
            </div>
        </div>
    </nav>

    <div class="container">
        
        <div class="sidebar">
            <a href="/profile" class="sidebar-btn">
                <i class="fas fa-user"></i>
                <span>Profile</span>
            </a>
            <a href="/address" class="sidebar-btn">
                <i class="fas fa-map-marker-alt"></i>
                <span>Addresses</span>
            </a>
            <a href="/orders" class="sidebar-btn">
                <i class="fas fa-shopping-bag"></i>
                <span>Orders</span>
            </a>
            <a href="/wallet" class="sidebar-btn active">
                <i class="fas fa-wallet"></i>
                <span>Wallet</span>
            </a>
        </div>

        
        <div class="main-content">
            <% if (hasWallet) { %>
                <div class="wallet-card">
                    <div class="balance-label">Your Balance</div>
                    <div class="balance">$<%= balance %></div>
                </div>

                <form id="depositForm" onsubmit="handleDeposit(event)">
                    <input type="number" name="amount" placeholder="Amount to deposit" required>
                    <button type="submit">Deposit</button>
                </form>
                
                <button class="transaction-btn" onclick="openTransactionModal()">View Transaction History</button>

                <div id="transactionModal" class="modal">
                    <div class="modal-content">
                        <div class="modal-header">
                            <span class="close" onclick="closeTransactionModal()">&times;</span>
                            <h3>Transaction History</h3>
                        </div>
                        
                        <% if (transactions && transactions.length > 0) { %>
                            <ul class="transaction-list">
                                <% transactions.forEach(transaction => { %>
                                    <li class="transaction-item">
                                        <div>
                                            <div class="transaction-type <%= transaction.type %>">
                                                <%= transaction.type.charAt(0).toUpperCase() + transaction.type.slice(1) %>
                                            </div>
                                            <div class="transaction-date">
                                                <%= new Date(transaction.createdAt).toLocaleString() %>
                                            </div>
                                        </div>
                                        <div class="transaction-amount <%= transaction.type %>">
                                            <%= transaction.type === 'deposit' ? '+' : '+' %>$<%= transaction.amount.toFixed(2) %>
                                        </div>
                                    </li>
                                <% }) %>
                            </ul>
                        <% } else { %>
                            <div class="no-transactions">
                                <p>No transactions found</p>
                            </div>
                        <% } %>
                    </div>
                </div>
            <% } else { %>
                <div class="create-wallet-container" style="text-align: center; padding: 40px;">
                    <div style="margin-bottom: 20px;">
                        <i class="fas fa-wallet" style="font-size: 64px; color: #3498db;"></i>
                    </div>
                    <h2 style="margin-bottom: 20px;">You don't have a wallet yet!</h2>
                    <p style="color: #666; margin-bottom: 30px;">Create your wallet to start managing your funds and make purchases.</p>
                    <form action="/wallet/create" method="POST">
                        <button type="submit" style="max-width: 200px; background-color: #3498db;">Create Wallet</button>
                    </form>
                </div>
            <% } %>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
    <script>
    
        const modal = document.getElementById("transactionModal");
        
      
        function openTransactionModal() {
            modal.style.display = "block";
        }
        
       
        function closeTransactionModal() {
            modal.style.display = "none";
        }
        
       
        window.onclick = function(event) {
            if (event.target == modal) {
                modal.style.display = "none";
            }
        }

        async function handleDeposit(event) {
            event.preventDefault();
            const form = event.target;
            const amount = form.amount.value;
            const submitButton = form.querySelector('button[type="submit"]');
            
            try {
               
                submitButton.disabled = true;
                submitButton.innerHTML = 'Processing...';

               
                if (!amount || parseFloat(amount) <= 0) {
                    throw new Error('Please enter a valid amount');
                }

                const response = await fetch('/wallet/deposit/create', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ amount })
                });

                const data = await response.json();
                
                if (!response.ok) {
                    throw new Error(data.message || 'Failed to create deposit order');
                }

                if (!data.success) {
                    throw new Error(data.message || 'Failed to create deposit order');
                }

                const options = {
                    key: data.key_id,
                    amount: data.amount,
                    currency: data.currency,
                    name: 'LUXE TIME',
                    description: 'Wallet Deposit',
                    order_id: data.order_id,
                    handler: async function (response) {
                        try {
                            const verifyResponse = await fetch('/wallet/deposit/verify', {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json'
                                },
                                body: JSON.stringify({
                                    razorpay_payment_id: response.razorpay_payment_id,
                                    razorpay_order_id: response.razorpay_order_id,
                                    razorpay_signature: response.razorpay_signature,
                                    amount: data.amount
                                })
                            });

                            const verifyData = await verifyResponse.json();
                            
                            if (verifyData.success) {
                                await Swal.fire({
                                    icon: 'success',
                                    title: 'Deposit Successful!',
                                    text: 'Your wallet has been updated.',
                                    showConfirmButton: false,
                                    timer: 1500
                                });
                                location.reload();
                            } else {
                                throw new Error(verifyData.message || 'Payment verification failed');
                            }
                        } catch (error) {
                            console.error('Verification error:', error);
                            await Swal.fire({
                                icon: 'error',
                                title: 'Verification Failed',
                                text: 'Please contact support if amount is deducted'
                            });
                        }
                    },
                    prefill: {
                        email: data.email,
                        contact: data.contact
                    },
                    theme: {
                        color: '#3399cc'
                    },
                    modal: {
                        ondismiss: function() {
                            submitButton.disabled = false;
                            submitButton.innerHTML = 'Deposit';
                        }
                    }
                };

                const rzp = new Razorpay(options);
                rzp.on('payment.failed', function (response) {
                    submitButton.disabled = false;
                    submitButton.innerHTML = 'Deposit';
                    Swal.fire({
                        icon: 'error',
                        title: 'Payment Failed',
                        text: 'The payment process failed. Please try again.'
                    });
                });
                rzp.open();

            } catch (error) {
                console.error('Error:', error);
                submitButton.disabled = false;
                submitButton.innerHTML = 'Deposit';
                await Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: error.message || 'Failed to process deposit. Please try again.'
                });
            }
        }
    </script>
</body>
</html>
