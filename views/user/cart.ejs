<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Shopping Cart</title>
    
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <link rel="stylesheet" href="/styles/cart.css">
    
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <style>
        body {
            padding-top: 80px; /* Add padding for fixed navbar */
        }
        
        /* Navbar Styles */
        .navbar {
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.08);
            transition: all 0.3s ease;
            height: 80px;
        }

        .navbar-brand {
            font-family: 'Marcellus', serif;
            font-size: 1.8rem;
            color: #1a1a1a;
            position: relative;
        }

        .brand-dot {
            position: absolute;
            right: -12px;
            bottom: 8px;
            width: 8px;
            height: 8px;
            background: #1a1a1a;
            border-radius: 50%;
        }

        .navbar-nav .nav-link {
            font-size: 0.9rem;
            font-weight: 500;
            padding: 0.5rem 1.2rem !important;
            position: relative;
        }

        .navbar-nav .nav-link::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 50%;
            width: 0;
            height: 2px;
            background: #1a1a1a;
            transition: all 0.3s ease;
            transform: translateX(-50%);
        }

        .navbar-nav .nav-link:hover::after,
        .navbar-nav .nav-link.active::after {
            width: 80%;
        }

        .nav-icons {
            display: flex;
            align-items: center;
            gap: 1.5rem;
        }

        .nav-icon {
            color: #1a1a1a;
            font-size: 1.2rem;
            transition: all 0.3s ease;
            position: relative;
        }

        .nav-icon:hover {
            color: #666;
            transform: translateY(-2px);
        }

        .icon-badge {
            position: absolute;
            top: -8px;
            right: -8px;
            background: #1a1a1a;
            color: white;
            font-size: 0.7rem;
            padding: 0.2rem 0.5rem;
            border-radius: 50%;
            min-width: 18px;
            height: 18px;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        /* Improved Hamburger Button Styles */
        .navbar-toggler {
            border: none;
            padding: 0;
            width: 30px;
            height: 24px;
            position: relative;
            background: transparent;
            cursor: pointer;
            outline: none;
        }

        .navbar-toggler:focus {
            outline: none;
            box-shadow: none;
        }

        .toggler-icon {
            position: absolute;
            width: 100%;
            height: 2px;
            background: #1a1a1a;
            transition: all 0.3s ease;
            left: 0;
        }

        .navbar-toggler .toggler-icon {
            top: 50%;
            transform: translateY(-50%);
        }

        .navbar-toggler .toggler-icon::before,
        .navbar-toggler .toggler-icon::after {
            content: '';
            position: absolute;
            width: 100%;
            height: 2px;
            background: #1a1a1a;
            left: 0;
            transition: all 0.3s ease;
        }

        .navbar-toggler .toggler-icon::before {
            top: -8px;
        }

        .navbar-toggler .toggler-icon::after {
            bottom: -8px;
        }

        /* Hamburger Animation */
        .navbar-toggler[aria-expanded="true"] .toggler-icon {
            background: transparent;
        }

        .navbar-toggler[aria-expanded="true"] .toggler-icon::before {
            top: 0;
            transform: rotate(45deg);
        }

        .navbar-toggler[aria-expanded="true"] .toggler-icon::after {
            bottom: 0;
            transform: rotate(-45deg);
        }

        @media (max-width: 991px) {
            .navbar-toggler {
                display: block;
                position: absolute;
                right: 15px;
                top: 50%;
                transform: translateY(-50%);
            }
        }

        /* Mobile Responsive */
        @media (max-width: 991px) {
            .navbar-collapse {
                padding: 1rem;
                margin-top: 0.5rem;
            }

            .nav-icons {
                margin-top: 1rem;
                justify-content: center;
            }

            .navbar-nav {
                text-align: center;
            }
        }

        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        @keyframes shimmer {
            0% {
                background-position: -1000px 0;
            }
            100% {
                background-position: 1000px 0;
            }
        }

        @keyframes float {
            0%, 100% {
                transform: translateY(0);
            }
            50% {
                transform: translateY(-10px);
            }
        }
        
        /* Wishlist Styles */
        .wishlist-container {
            padding: 30px 0;
        }
        .wishlist-header {
            margin-bottom: 30px;
            border-bottom: 1px solid #eee;
            padding-bottom: 15px;
        }
        .wishlist-item {
            display: flex;
            margin-bottom: 20px;
            padding-bottom: 20px;
            border-bottom: 1px solid #eee;
        }
        .wishlist-item-image {
            width: 120px;
            height: 120px;
            object-fit: cover;
            margin-right: 20px;
        }
        .wishlist-item-details {
            flex-grow: 1;
        }
        .wishlist-item-actions {
            display: flex;
            gap: 10px;
            margin-top: 15px;
        }
        .empty-wishlist {
            text-align: center;
            padding: 50px 0;
        }
        .empty-wishlist i {
            font-size: 50px;
            color: #ccc;
            margin-bottom: 20px;
        }
        .color-circle {
            display: inline-block;
            width: 20px;
            height: 20px;
            border-radius: 50%;
            margin-left: 10px;
            vertical-align: middle;
        }

        /* Improved Quantity Button Styles */
        .q-b-t {
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 10px;
        }
        
        .quantity-btn {
            width: 30px;
            height: 30px;
            display: flex;
            align-items: center;
            justify-content: center;
            background-color: #f8f9fa;
            border: 1px solid #e0e0e0;
            border-radius: 50%;
            color: #1a1a1a;
            font-size: 16px;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 2px 5px rgba(0,0,0,0.05);
        }
        
        .quantity-btn:hover {
            background-color: #1a1a1a;
            color: white;
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        }
        
        .quantity-btn:active {
            transform: translateY(0);
        }
        
        .q-b-t span {
            min-width: 30px;
            text-align: center;
            font-weight: 500;
            font-size: 16px;
        }
        
        /* Animation for quantity changes */
        @keyframes quantityPulse {
            0% { transform: scale(1); }
            50% { transform: scale(1.2); }
            100% { transform: scale(1); }
        }
        
        .quantity-changed {
            animation: quantityPulse 0.3s ease;
            color: #1a1a1a;
        }

        /* New CSS for smooth animations */
        .value-updated {
            background-color: rgba(255, 255, 0, 0.2);
            transition: background-color 0.3s ease;
        }

        @keyframes numberTransition {
            from { opacity: 0.5; }
            to { opacity: 1; }
        }

        .summary-item span:last-child {
            display: inline-block;
            transition: all 0.3s ease;
        }

        .summary-item.highlight {
            background-color: rgba(52, 152, 219, 0.1);
            transition: background-color 0.3s ease;
        }

        /* Add these responsive styles */
        @media (max-width: 768px) {
            /* Cart Layout */
            .cart-layout {
                flex-direction: column;
                padding: 10px;
            }

            /* Table Responsive */
            .cart-table {
                overflow-x: auto;
            }

            .cart-table table {
                min-width: 600px; /* Ensure table can scroll horizontally */
            }

            /* Order Summary */
            .order-summary {
                width: 100%;
                margin-top: 20px;
                padding: 15px;
            }

            /* Quantity Controls */
            .q-b-t {
                flex-wrap: nowrap;
                gap: 5px;
            }

            .quantity-btn {
                width: 25px;
                height: 25px;
                font-size: 14px;
            }

            /* Product Details */
            td {
                padding: 10px 5px;
                font-size: 14px;
            }

            /* Action Buttons */
            .remove-btn {
                padding: 5px 10px;
                font-size: 12px;
            }

            /* Empty Cart */
            .empty-cart {
                padding: 20px;
            }

            /* Continue Shopping Button */
            .continue-shopping {
                margin: 20px auto;
                display: block;
                width: fit-content;
            }
        }

        /* Additional styles for even smaller screens */
        @media (max-width: 480px) {
            h1 {
                font-size: 24px;
                text-align: center;
                margin: 15px 0;
            }

            .cart-table table {
                font-size: 12px;
            }

            .order-summary {
                padding: 10px;
            }

            .summary-item {
                font-size: 14px;
            }

            .checkout-button {
                padding: 10px;
                font-size: 14px;
            }
        }

        /* Base styles for cart layout (add if not present) */
        .cart-layout {
            display: flex;
            gap: 20px;
            padding: 20px;
            max-width: 1200px;
            margin: 0 auto;
        }

        .cart-table {
            flex: 1;
        }

        .order-summary {
            width: 300px;
            padding: 20px;
            background: #f8f9fa;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }

        /* Hide nav icons on mobile and show them in hamburger menu */
        @media (max-width: 991px) {
            .nav-icons {
                display: none !important;
            }

            .navbar-collapse .nav-icons {
                display: flex !important;
                justify-content: center;
                gap: 2rem;
                padding: 15px 0;
                margin-top: 15px;
                border-top: 1px solid #eee;
            }

            .navbar-collapse {
                position: fixed;
                top: 80px;
                left: 0;
                right: 0;
                background: white;
                padding: 20px;
                box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
                display: none;
            }

            .navbar-collapse.show {
                display: block;
            }

            .navbar-nav {
                text-align: center;
            }

            .nav-item {
                margin: 10px 0;
            }

            /* Hamburger button positioning */
            .navbar-toggler {
                display: block;
                position: absolute;
                right: 15px;
                top: 50%;
                transform: translateY(-50%);
                border: none;
                padding: 0;
                margin: 0;
                outline: none !important;
                box-shadow: none !important;
            }
        }

        /* Simple hamburger icon */
        .navbar-toggler .navbar-toggler-icon {
            background-image: none;
            position: relative;
            height: 2px;
            width: 25px;
            background: #1a1a1a;
            display: block;
            transition: all 0.3s ease;
        }

        .navbar-toggler .navbar-toggler-icon::before,
        .navbar-toggler .navbar-toggler-icon::after {
            content: '';
            position: absolute;
            height: 2px;
            width: 25px;
            background: #1a1a1a;
            transition: all 0.3s ease;
        }

        .navbar-toggler .navbar-toggler-icon::before {
            top: -8px;
        }

        .navbar-toggler .navbar-toggler-icon::after {
            bottom: -8px;
        }
    </style>
</head>

<body>
 
    <nav class="navbar navbar-expand-lg fixed-top bg-white">
        <div class="container">
          
            <a class="navbar-brand" href="/">
                LUXE TIME 
                <span class="brand-dot"></span>
            </a>

            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarContent">
                <span class="navbar-toggler-icon"></span>
            </button>

            
            <div class="collapse navbar-collapse" id="navbarContent">
                <ul class="navbar-nav mx-auto text-uppercase">
                    <li class="nav-item">
                        <a class="nav-link" href="/">Home</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/shope">Shop</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/men">Men</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/women">Women</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/limited-edition">Limited Edition</a>
                    </li>
                </ul>
            </div>

            <div class="nav-icons">
                <a href="/search" class="nav-icon" title="Search">
                    <i class="fas fa-search"></i>
                </a>
                <a href="/wishlist" class="nav-icon" title="Wishlist">
                    <i class="fas fa-heart"></i>
                </a>
                <a href="/cart" class="nav-icon" title="Cart">
                    <i class="fas fa-shopping-cart"></i>
                </a>
                <a href="/account" class="nav-icon" title="Account">
                    <i class="fas fa-user"></i>
                </a>
            </div>
        </div>
    </nav>

    <h1>Your Shopping Cart</h1>

    <div id="cart-container">
        <% if (cart && cart.length> 0) { %>
            <div class="cart-layout">
                <div class="cart-table">
                    <table>
                        <thead>
                            <tr>
                                <th>Product</th>
                                <th>Price</th>
                                <th>Quantity</th>
                                <th>Stock</th>
                                <th>Color</th>
                                <th>Total</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% cart.forEach(item=> { %>
                                <tr id="cart-item-<%= item.id %>">
                                    <td>
                                        <%= item.name %>
                                    </td>
                                    <td>$<%= item.price %>
                                    </td>
                                    <td class="q-b-t">
                                        <button class="quantity-btn button-plus"
                                            onclick="updateQuantity('<%= item.productId %>', -1)">-</button>
                                        <span id="quantity-<%= item.productId %>">
                                            <%= item.quantity %>
                                        </span>
                                        <button class="quantity-btn button-plus"
                                            onclick="updateQuantity('<%= item.productId %>', 1)">+</button>
                                    </td>

                                    <td>
                                        <% if (item.stock <=0) { %>
                                            <span class="out-of-stock">Out of Stock</span>
                                            <% } else { %>
                                                <%= item.stock && 'In stock' %>
                                                    <% } %>
                                    </td>
                                    <td>
                                        <div class="color-indicator">
                                            <span class="color-dot"
                                                style="background-color: '<%= item.color || '#bd1212' %>"></span>
                                            <span class="color-name"
                                                style="color: '<%= item.color || '#bd1212' %>"></span>
                                            <%= item.color %>
                                        </div>
                                    </td>
                                    <td>$<%= (item.price * item.quantity).toFixed(2) %>
                                    </td>
                                    <td>
                                        <button onclick="removeFromCart('<%= item.productId %>')" class="remove-btn">
                                            <i class="fas fa-trash"></i> Remove
                                        </button>
                                    </td>
                                </tr>
                                <% }) %>
                        </tbody>
                    </table>
                </div>

                <div class="order-summary">
                    <h2>Order Summary</h2>
                
                    <div class="summary-item">
                        <span>Subtotal</span>
                        <span id="subtotal">₹
                            <%= cart.reduce((acc, item) => acc + (item.discountedPrice * item.quantity), 0).toFixed(2) %>
                        </span>
                    </div>
                
                    <div class="summary-item">
                        <span>Tax (10%)</span>
                        <span id="tax">₹
                            <%= (cart.reduce((acc, item) => acc + (item.discountedPrice * item.quantity), 0) * 0.1).toFixed(2) %>
                        </span>
                    </div>
                
                    <div class="summary-item">
                        <span>Shipping</span>
                        <span>₹00.00</span>
                    </div>
                
                    <div class="summary-item">
                        <span style="color: green;">Total Offer Discount</span>
                        <span id="totalOfferDiscount" style="color: green;">-₹
                            <%= totalOfferDiscount.toFixed(2) %>
                        </span>
                    </div>
                
                    <div class="summary-item summary-total">
                        <span>Total</span>
                        <span id="total">₹
                            <%= (cart.reduce((acc, item) => acc + (item.discountedPrice * item.quantity), 0) * 1.1).toFixed(2) %>
                        </span>
                    </div>
                
                    <a href="/checkout" class="checkout-button">
                        <i class="fas fa-lock"></i> Proceed to Checkout
                    </a>
                </div>


            </div>
            <% } else { %>
                <div class="empty-cart">
                    <i class="fas fa-shopping-cart" style="font-size: 3rem; margin-bottom: 1rem;"></i>
                    <p>Your cart is empty.</p>
                </div>
                <% } %>
    </div>

    <div style="text-align: center; margin-top: 2rem;">
        <a href="/shope" class="continue-shopping">
            <i class="fas fa-arrow-left"></i> Continue Shopping
        </a>
    </div>
    <script>
        async function removeFromCart(itemId) {
            try {

                // Show confirmation dialog
                const result = await Swal.fire({
                    title: 'Are you sure?',
                    text: "Do you want to remove this item from cart?",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes, remove it!'
                });

                if (result.isConfirmed) {
                    const response = await fetch(`/cart/remove/${itemId}`, { method: 'DELETE' });
                    const data = await response.json();

                    if (response.ok) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Removed!',
                            text: 'Item has been removed from cart',
                            showConfirmButton: false,
                            timer: 1500
                        }).then(() => {
                            location.reload();
                        });
                    } else {
                        throw new Error(data.message);
                    }
                }
            } catch (error) {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: error.message || 'Failed to remove item'
                });
            }
        }

        async function updateQuantity(productId, change) {
            const quantitySpan = document.getElementById(`quantity-${productId}`);
            if (!quantitySpan) {
                console.error(`Quantity span not found for product ${productId}`);
                return;
            }

            let currentQuantity = parseInt(quantitySpan.innerText);


            // Quantity validation
            if ((change === -1 && currentQuantity === 1) || (change === 1 && currentQuantity >= 5)) {
                Swal.fire({
                    icon: 'warning',
                    title: 'Invalid Quantity',
                    text: "Quantity must be between 1 and 5",
                    confirmButtonColor: '#3085d6'
                });
                return;
            }

            try {
                const response = await fetch(`/cart/update/${productId}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'Accept': 'application/json'
                    },
                    body: JSON.stringify({ change: change })
                });

                const result = await response.json();

                if (response.ok) {
                    location.reload();
                } else {
                    throw new Error(result.message || 'Failed to update quantity');
                }
            } catch (error) {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: error.message || 'Failed to update quantity'
                });
            }
        }

        function updateCartTotals() {
            try {
                const cartItems = document.querySelectorAll('tbody tr');
                let originalSubtotal = 0;
                let discountedSubtotal = 0;
                let totalDiscount = 0;

                cartItems.forEach(item => {
                  
                    const priceCell = item.querySelector('td:nth-child(2)');
                    const originalPriceElement = priceCell.querySelector('.text-decoration-line-through');
                    const discountedPriceElement = priceCell.querySelector('.text-danger');
                    const quantityElement = item.querySelector(`[id^="quantity-"]`);
                    
                    if (!quantityElement) return;
                    
                    const quantity = parseInt(quantityElement.innerText.trim());
                    
                    let originalPrice, discountedPrice;
                    
                    if (originalPriceElement && discountedPriceElement) {
                       
                        originalPrice = parseFloat(originalPriceElement.innerText.replace(/[^0-9.]/g, ''));
                        discountedPrice = parseFloat(discountedPriceElement.innerText.replace(/[^0-9.]/g, ''));
                    } else {
                     
                        originalPrice = parseFloat(priceCell.innerText.replace(/[^0-9.]/g, ''));
                        discountedPrice = originalPrice;
                    }

                    if (!isNaN(originalPrice) && !isNaN(quantity)) {
                        originalSubtotal += originalPrice * quantity;
                        discountedSubtotal += discountedPrice * quantity;
                        
                        
                        const itemDiscount = (originalPrice - discountedPrice) * quantity;
                        totalDiscount += itemDiscount;

                       
                        const totalCell = item.querySelector('td:nth-child(6)');
                        if (totalCell) {
                            totalCell.innerText = `₹${(discountedPrice * quantity).toFixed(2)}`;
                        }
                    }
                });

                const tax = discountedSubtotal * 0.1;
                const finalTotal = discountedSubtotal + tax;

                
                animateValue('subtotal', originalSubtotal);
                animateValue('totalOfferDiscount', totalDiscount, true);
                animateValue('tax', tax);
                animateValue('total', finalTotal);

                
              
                    window.location.reload();
              

            } catch (error) {
                console.error('Error updating cart totals:', error);
            }
        }

        
        function animateValue(elementId, newValue, isDiscount = false) {
            const element = document.getElementById(elementId);
            if (!element) return;

            const currentValue = parseFloat(element.innerText.replace(/[^0-9.-]/g, ''));
            const prefix = isDiscount ? '-₹' : '₹';

          
            const steps = 10; 
            const stepValue = (newValue - currentValue) / steps;
            let currentStep = 0;

            const animation = setInterval(() => {
                currentStep++;
                const intermediateValue = currentValue + (stepValue * currentStep);
                element.innerText = `${prefix}${intermediateValue.toFixed(2)}`;
                
                if (currentStep >= steps) {
                    clearInterval(animation);
                    element.innerText = `${prefix}${newValue.toFixed(2)}`;
                }
            }, 20);

            
            element.classList.add('value-updated');
            setTimeout(() => element.classList.remove('value-updated'), 300);
        }

        function formatCurrency(amount) {
            return new Intl.NumberFormat('en-IN', {
                style: 'currency',
                currency: 'INR',
                minimumFractionDigits: 2
            }).format(amount);
        }

        document.addEventListener('DOMContentLoaded', function() {
            const navbarToggler = document.querySelector('.navbar-toggler');
            const navbarCollapse = document.querySelector('.navbar-collapse');

            // Toggle menu
            navbarToggler.addEventListener('click', function() {
                const isExpanded = this.getAttribute('aria-expanded') === 'true';
                this.setAttribute('aria-expanded', !isExpanded);
                navbarCollapse.classList.toggle('show');
            });

            // Close menu when clicking outside
            document.addEventListener('click', function(event) {
                if (!navbarToggler.contains(event.target) && 
                    !navbarCollapse.contains(event.target) && 
                    navbarCollapse.classList.contains('show')) {
                    navbarCollapse.classList.remove('show');
                    navbarToggler.setAttribute('aria-expanded', 'false');
                }
            });

            // Prevent menu close when clicking inside
            navbarCollapse.addEventListener('click', function(event) {
                event.stopPropagation();
            });
        });
    </script>
</body>

</html>