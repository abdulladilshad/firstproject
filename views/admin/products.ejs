<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Product Management</title>
    <script src="https://kit.fontawesome.com/YOUR-KIT-ID.js" crossorigin="anonymous"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <link
        href="https://fonts.googleapis.com/css2?family=Playfair+Display:wght@400;700&family=Poppins:wght@300;400;500&display=swap"
        rel="stylesheet">
    <link rel="stylesheet" href="/styles/adminproducts.css">
</head>

<body>
    <div class="dashboard-container">
        <button id="hamburger" class="hamburger-menu">
            <span></span>
            <span></span>
            <span></span>
        </button>
        
        <div class="dashboard-container">
            <div class="overlay" id="overlay"></div>
            <aside class="sidebar" id="sidebar">
                <div class="sidebar-header">
                    <h2>PRODUCTS</h2>
                    <button class="close-sidebar" id="closeSidebar">
                        <i class="fas fa-times"></i>
                    </button>
                </div>
                <!-- Rest of your sidebar content -->
            </aside>
            <!-- Rest of your content -->
        </div>
        <aside class="sidebar">
            <div class="sidebar-header">
                <h2>PRODUCTS</h2>
            </div>
            <ul class="sidebar-menu">
                <li><a href="/admin/dashboard">
                        <i class="fas fa-home"></i> Dashboard
                    </a></li>
                <li><a href="/admin/products" class="active">
                        <i class="fas fa-box"></i> Products
                    </a></li>
                <li><a href="/orders">
                        <i class="fas fa-shopping-cart"></i> Orders
                    </a></li>
                <li><a href="/admin/users">
                        <i class="fas fa-users"></i> Users
                    </a></li>
                <li><a href="/admin/categories">
                        <i class="fas fa-tags"></i> Category
                    </a></li>
                <li><a href="/offers">
                        <i class="fas fa-gift"></i> Offers
                    </a></li>
                <li><a href="/coupons">
                        <i class="fas fa-ticket-alt"></i> Coupons
                    </a></li>
                <li><a href="/settings">
                        <i class="fas fa-cog"></i> Settings
                    </a></li>
                <li><a href="/logout">
                        <i class="fas fa-sign-out-alt"></i> Logout
                    </a></li>
            </ul>
        </aside>
        <main class="main-content">
            <header class="topbar">
                <h1>Product Management</h1>
                <div class="topbar-actions">
                    <input type="text" placeholder="Search products..." class="search-bar" value=""
                        oninput="window.location.href = '/admin/products?search=' + this.value">
                    <a href="/admin/addproducts"><button class="add-button">Add Product</button></a>
                </div>
            </header>
            <section class="product-table">
                <table>
                    <thead>
                        <tr>
                            <th>#</th>
                            <th>Name</th>
                            <th>Price</th>
                            <th>Stock</th>

                            <th>Category</th>
                            <th>Image</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        <!-- Dynamic rows rendered using EJS -->
                        <%w=(currentPage==1)?0:(currentPage-1)*7%>
                            <% products.forEach((product, index)=> { %>
                                <tr>
                                    <td>
                                        <%= ((index)+1)+w%>

                                    </td>
                                    <td>
                                        <%= product.productName %>
                                    </td>
                                    <td>$<%= product.price %>
                                    </td>
                                    <td>
                                        <% product.variants.forEach(variant => { %>
                                          Color: <%= variant.color %>, Quantity: <%= variant.quantity %> <br>
                                        <% }) %>
                                      </td>
                                      

                                    <td>
                                        <%= product.category.name %>
                                    </td>
                                    <td>
                                        <button onclick="viewProduct('<%= product.id %>')">view</button>
                                    </td>

                                    <td>
                                        <!-- <button onclick="editProduct(<%= product.id %>)">Edit</button> -->
                                        <a href="/admin/editproducts/<%= product._id %>"><button>Edit</button></a>

                                        <button
                                            onclick="toggleProductStatus('<%= product._id %>', '<%= product.isDelete %>')">
                                            <%= product.isDelete ? 'List' : 'Unlist' %>
                                        </button>

                                    </td>
                                </tr>
                                <% }); %>
                    </tbody>
                </table>
            </section>
            <div class="pagination">
                <% if (currentPage > 1) { %>
                    <a href="?page=<%= currentPage - 1 %>" class="nav-btn">
                        <i class="fa-solid fa-angle-left"></i>
                    </a>
                <% } %>
            
                <div class="page-numbers">
                    <% 
                    let startPage = Math.max(1, currentPage - 2);
                    let endPage = Math.min(totalPages, startPage + 4);
                    if (endPage - startPage < 4) {
                        startPage = Math.max(1, endPage - 4);
                    }
                    %>
            
                    <% if (startPage > 1) { %>
                        <a href="?page=1" class="page-btn">1</a>
                        <% if (startPage > 2) { %>
                            <span class="dots">...</span>
                        <% } %>
                    <% } %>
            
                    <% for (let i = startPage; i <= endPage; i++) { %>
                        <a href="?page=<%= i %>" class="page-btn <%= currentPage === i ? 'active' : '' %>">
                            <%= i %>
                        </a>
                    <% } %>
            
                    <% if (endPage < totalPages) { %>
                        <% if (endPage < totalPages - 1) { %>
                            <span class="dots">...</span>
                        <% } %>
                        <a href="?page=<%= totalPages %>" class="page-btn"><%= totalPages %></a>
                    <% } %>
                </div>
            
                <% if (currentPage < totalPages) { %>
                    <a href="?page=<%= currentPage + 1 %>" class="nav-btn">
                        <i class="fa-solid fa-angle-right"></i>
                    </a>
                <% } %>
            </div>

        </main>
    </div>
    <!-- Include SweetAlert2 -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>


        function editProduct(productId) {
            window.location.href = '/admin/products/edit/' + productId;
        }

        function deleteProduct(productId) {
            if (confirm('Are you sure you want to delete this product?')) {
                fetch('/admin/products/delete/' + productId, { method: 'DELETE' })
                    .then(response => {
                        if (response.ok) {
                            alert('Product deleted successfully');
                            window.location.reload();
                        } else {
                            alert('Failed to delete product');
                        }
                    });
            }
        }

        function viewProduct(productId) {
            console.log('Product ID:', productId);
            fetch(`getProductById/${productId}`)
                .then(response => response.json())
                .then(product => {
                    console.log('Fetched Product:', product);  // Check product data in the console
                    const images = product.imagePaths;  // Assuming imagePaths is the correct field
                    if (images && images.length > 0) {
                        let imageHTML = '';
                        images.forEach(image => {
                            imageHTML += `<img src=/${image} alt="Product Image" style="width: 100%; max-width: 300px; margin: 5px;">`;
                        });

                        Swal.fire({
                            title: `<strong>${product.productName}</strong>`,  // Product name as title
                            html: imageHTML,  // Display the images inside SweetAlert
                            showCloseButton: true,  // Allow closing the modal
                            width: '600px',  // Customize width
                        });
                    } else {
                        Swal.fire('No Images', 'This product does not have any images.', 'info');
                    }
                })
                .catch(err => {
                    console.error('Error fetching product:', err);
                    Swal.fire('Error', 'Could not fetch product images.', 'error');
                });
        }

        function toggleProductStatus(productId, isDelete) {
            // Define action based on the current listed status
            const action = isDelete ? "unlist" : "list";

            // Confirm the action using SweetAlert
            Swal.fire({
                title: `Are you sure?`,
                text: `Do you want to ${action} this product?`,
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: `Yes, ${action} it!`
            }).then((result) => {
                if (result.isConfirmed) {
                    // Only call the API after the confirmation
                    fetch(`/admin/products/toggle-status/${productId}`, {
                        method: 'PUT',
                    })
                        .then((response) => response.json())
                        .then((data) => {
                            if (data.success) {
                                Swal.fire({
                                    title: "Success!",
                                    text: `Product has been ${action}ed.`,
                                    icon: "success",
                                    timer: 2000,
                                    showConfirmButton: false
                                }).then(() => {
                                    window.location.reload(); // Reload to update the UI
                                });
                            } else {
                                Swal.fire("Error!", data.error || "Failed to update product status.", "error");
                            }
                        })
                        .catch((error) => {
                            console.error('Error:', error);
                            Swal.fire("Error!", "An error occurred while updating the product status.", "error");
                        });
                }
            });
        }

        document.addEventListener('DOMContentLoaded', function() {
    const hamburger = document.getElementById('hamburger');
    const sidebar = document.getElementById('sidebar');
    const overlay = document.getElementById('overlay');
    const closeSidebar = document.getElementById('closeSidebar');

    function toggleSidebar() {
        hamburger.classList.toggle('active');
        sidebar.classList.toggle('active');
        overlay.classList.toggle('active');
        document.body.style.overflow = sidebar.classList.contains('active') ? 'hidden' : '';
    }

    hamburger.addEventListener('click', toggleSidebar);
    closeSidebar.addEventListener('click', toggleSidebar);
    overlay.addEventListener('click', toggleSidebar);

    // Close sidebar on window resize if screen becomes larger
    window.addEventListener('resize', function() {
        if (window.innerWidth > 768 && sidebar.classList.contains('active')) {
            toggleSidebar();
        }
    });

    // Add smooth hover effect for menu items
    const menuItems = document.querySelectorAll('.sidebar-menu li a');
    menuItems.forEach(item => {
        item.addEventListener('mouseenter', function() {
            this.style.transform = 'translateX(5px)';
        });
        item.addEventListener('mouseleave', function() {
            this.style.transform = 'translateX(0)';
        });
    });
});

    </script>
</body>

</html>